apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8
jar {
	version = '1.0'
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
	}
}

repositories {
    mavenCentral()
}

ext {
	druidVersion                           = '1.1.5'
	fastjsonVersion                        = '1.2.39'
    lombokVersion                          = '1.16.18'
    mybatisVersion                         = '1.3.1'
	springbootVersion                      = '1.5.3.RELEASE'
	springStatemachineVersion              = '1.2.6.RELEASE'
	
	
	libraries = [
        druid:                            "com.alibaba:druid:${druidVersion}",
        fastjson:                         "com.alibaba:fastjson:${fastjsonVersion}",
        hsql:                             "org.hsqldb:hsqldb",
		jdbcConnector:                    "mysql:mysql-connector-java",
		
		lombok:                           "org.projectlombok:lombok:${lombokVersion}",
		// 状态机
		springStatusmachine:              "org.springframework.statemachine:spring-statemachine-core:${springStatemachineVersion}",
		
		springSession:                    "org.springframework.session:spring-session-data-redis",
		springBoot:                       "org.springframework.boot:spring-boot-starter",
		springBootJdbc:                   "org.springframework.boot:spring-boot-starter-jdbc",
		springBootDataRedis:              "org.springframework.boot:spring-boot-starter-data-redis",
		springBootMail:                   "org.springframework.boot:spring-boot-starter-mail",
		springBootVelocity:               "org.springframework.boot:spring-boot-starter-velocity",
		springBootFreemarker:             "org.springframework.boot:spring-boot-starter-freemarker",
		springBootAmqp:                   "org.springframework.boot:spring-boot-starter-amqp",
		springBootAop:                    "org.springframework.boot:spring-boot-starter-aop",
		springBootMyBatis:                "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisVersion}",
		springBootWeb:                    "org.springframework.boot:spring-boot-starter-web",
		springThymeleaf:                  "org.springframework.boot:spring-boot-starter-thymeleaf",
		springSecurity:                   "org.springframework.boot:spring-boot-starter-security",
		springActuator:                   "org.springframework.boot:spring-boot-starter-actuator",
        log4j2YmlSupport:                 "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml",
		springBootLog4j2:                 "org.springframework.boot:spring-boot-starter-log4j2",
		
		springBootTest:                   "org.springframework.boot:spring-boot-starter-test",
		springSecurityTest:               "org.springframework.security:spring-security-test",
		junit:                            "junit:junit"
	]
}

dependencies {
//  compile(libraries.hsql) // spring-boot 内置数据库
    compile(libraries.lombok)
    compile(libraries.fastjson)
    
    compile(libraries.springBoot) {
        exclude group:'org.springframework.boot', module:'spring-boot-starter-logging'
    }
    
    compile(libraries.jdbcConnector)
    compile(libraries.druid)
    compile(libraries.springBootLog4j2)
    compile(libraries.log4j2YmlSupport)
    compile(libraries.springBootWeb) {
        exclude group:'org.springframework.boot', module:'spring-boot-starter'
    }
    compile(libraries.springBootAop) {
        exclude group:'org.springframework.boot', module:'spring-boot-starter'
    }
    compile(libraries.springBootAmqp) {  // 支持消息中间件依赖(rabbitMQ) 
        exclude group:'org.springframework.boot', module:'spring-boot-starter'
    }
    compile(libraries.springBootMail) {
        exclude group:'org.springframework.boot', module:'spring-boot-starter'
    }
//  compile(libraries.springBootVelocity)   // 邮件模板(官方弃用,推荐freemarker)
    compile(libraries.springBootFreemarker) {  // 邮件模板 
        exclude group:'org.springframework.boot', module:'spring-boot-starter'
    }
    
//  compile(libraries.springBootJdbc)  // 使用了springBootMybatis依赖可以不用此项
    compile(libraries.springBootMyBatis) {
        exclude group:'org.springframework.boot', module:'spring-boot-starter'
    }
    compile(libraries.springBootDataRedis) {
        exclude group:'org.springframework.boot', module:'spring-boot-starter'
    }
    compile(libraries.springThymeleaf) {
        exclude group:'org.springframework.boot', module:'spring-boot-starter'
    }
    compile(libraries.springSecurity) {
        exclude group:'org.springframework.boot', module:'spring-boot-starter'
    }
    compile(libraries.springActuator) {
        exclude group:'org.springframework.boot', module:'spring-boot-starter'
    }
    compile(libraries.springSession)
    
    testCompile(libraries.springBootTest) {
        exclude group:'org.springframework.boot', module:'spring-boot-starter'
    }
    testCompile(libraries.springSecurityTest) {
        exclude group:'org.springframework.boot', module:'spring-boot-starter'
    }
    testCompile(libraries.junit)
    
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
